{"version":3,"sources":["components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/covidualizer.png","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css"],"names":["module","exports","useGridStyles","makeStyles","breakpoints","root","up","justifyContent","useStyles","maxWidth","maxHeight","borderRadius","margin","content","padding","Cards","data","confirmed","recovered","deaths","lastUpdate","gridStyles","styles","useN03TextInfoContentStyles","shadowStyles","useLightTopShadowStyles","cardStyles","console","log","className","container","Grid","classes","spacing","item","component","Card","xs","md","cx","image","extra","Date","toDateString","CardContent","overline","heading","start","end","value","duration","separator","body","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","Autocomplete","onChange","event","newValue","renderInput","params","TextField","variant","App","state","fetchedData","setState","this","src","titleImage","alt","href","target","bottom","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.17064c1b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3tAJa\",\"bottom\":\"Chart_bottom__t49Ib\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1uzIL\"};","module.exports = __webpack_public_path__ + \"static/media/covidualizer.5006a434.png\";","import React from 'react';\r\nimport { Card, CardContent, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BrandCardHeader from '@mui-treasury/components/cardHeader/brand';\r\nimport TextInfoContent from '@mui-treasury/components/content/textInfo';\r\nimport { useN03TextInfoContentStyles } from '@mui-treasury/styles/textInfoContent/n03';\r\nimport { useLightTopShadowStyles } from '@mui-treasury/styles/shadow/lightTop';\r\n\r\n//Bottom useGridStyles and useStyles graciously taken and modified from MUI Treasury\r\nconst useGridStyles = makeStyles(({ breakpoints }) => ({\r\n\troot: {\r\n\t\t[breakpoints.up('md')]: {\r\n\t\t\tjustifyContent: 'center',\r\n\t\t},\r\n\t},\r\n}));\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\troot: {\r\n\t\tmaxWidth: 343,\r\n\t\tmaxHeight: 350,\r\n\t\tborderRadius: 20,\r\n\t\tmargin: 50,\r\n\t},\r\n\tcontent: {\r\n\t\tpadding: 24,\r\n\t},\r\n}));\r\n\r\n\r\n// Creating grid that will space out and center Cards\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n\tconst gridStyles = useGridStyles();\r\n\tconst styles = useN03TextInfoContentStyles();\r\n\tconst shadowStyles = useLightTopShadowStyles();\r\n\tconst cardStyles = useStyles();\r\n\r\n\tconsole.log(confirmed);\r\n\tif (!confirmed) { // If confirmed data not yet ready, return 'Loading'\r\n\t\treturn 'Loading...';\r\n\t}\r\n\treturn (\r\n\t\t<div className = {styles.container} >\r\n\t\t\t<Grid classes={gridStyles} container spacing = {4}> \r\n\t\t\t\t<Grid item component={Card} xs={12} md={3} className={cx(cardStyles.root, shadowStyles.root)}>\r\n\t\t\t\t\t<BrandCardHeader\r\n\t\t\t\t\t\timage={'https://img.favpng.com/1/12/3/computer-icons-png-favpng-7SbJJ8GfuwRk8C3kFBUqYbbte.jpg'}\t\r\n\t\t\t\t\t\textra={new Date(lastUpdate).toDateString()}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<CardContent className={cardStyles.content}>\r\n\t\t\t\t\t\t<TextInfoContent\r\n\t\t\t\t\t\t\tclasses={styles}\r\n\t\t\t\t\t\t\toverline={'CONFIRMED CASES'}\r\n\t\t\t\t\t\t\theading={\r\n\t\t\t\t\t\t\t\t<CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbody={\r\n\t\t\t\t\t\t\t\t'Number of confirmed active cases of COVID-19.'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item component={Card} xs={12} md={3} className={cx(cardStyles.root, shadowStyles.root)}>\r\n\t\t\t\t\t<BrandCardHeader\r\n\t\t\t\t\t\timage={'https://www.vippng.com/png/detail/452-4525287_health-benefits-clipart-health-icon-green-png.png'}\t\r\n\t\t\t\t\t\textra={new Date(lastUpdate).toDateString()}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<CardContent className={cardStyles.content}>\r\n\t\t\t\t\t\t<TextInfoContent\r\n\t\t\t\t\t\t\tclasses={styles}\r\n\t\t\t\t\t\t\toverline={'RECOVERIES'}\r\n\t\t\t\t\t\t\theading={\r\n\t\t\t\t\t\t\t\t<CountUp start={0} end={recovered.value} duration={2.5} separator=\",\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbody={\r\n\t\t\t\t\t\t\t\t'Number of confirmed recoveries from COVID-19.'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item component={Card} xs={12} md={3} className={cx(cardStyles.root, shadowStyles.root)}>\r\n\t\t\t\t\t<BrandCardHeader\r\n\t\t\t\t\t\timage={'https://cdn1.iconfinder.com/data/icons/social-messaging-ui-color-shapes-2/128/death1-circle-red-512.png'}\t\r\n\t\t\t\t\t\textra={new Date(lastUpdate).toDateString()}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<CardContent className={cardStyles.content}>\r\n\t\t\t\t\t\t<TextInfoContent\r\n\t\t\t\t\t\t\tclasses={styles}\r\n\t\t\t\t\t\t\toverline={'DEATHS'}\r\n\t\t\t\t\t\t\theading={\r\n\t\t\t\t\t\t\t\t<CountUp start={0} end={deaths.value} duration={2.5} separator=\",\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbody={\r\n\t\t\t\t\t\t\t\t'Number of confirmed confirmed deaths from COVID-19.'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Cards;","import axios from 'axios'; // handles APIs\r\n\r\nconst url = 'https://covid19.mathdro.id/api'\r\n\r\nexport const fetchData = async (country) => { //Asynchronous function\r\n\tlet changeableUrl = url;\r\n\r\n\tif (country) { // if valid country\r\n\t\tchangeableUrl = `${url}/countries/${country}`\r\n\t}\r\n\r\n\ttry {\r\n\t\t// take only data that we need\r\n\t\tconst { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl); \r\n\r\n\t\tconst modifiedData = { confirmed, recovered, deaths, lastUpdate };\r\n\t\treturn modifiedData; \r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n\ttry {\r\n\t\tconst { data } = await axios.get(`${url}/daily`);\r\n\t\t\r\n\t\tconst modifiedData = data.map((dailyData) => ({\r\n\t\t\tconfirmed: dailyData.confirmed.total,\r\n\t\t\tdeaths: dailyData.deaths.total,\r\n\t\t\tdate: dailyData.reportDate,\r\n\t\t}));\r\n\r\n\t\treturn modifiedData;\r\n\t} catch(error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n\ttry {\r\n\t\tconst { data: { countries }} = await axios.get(`${url}/countries`);\r\n\r\n\t\treturn countries.map((country) => country.name);\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, deaths, recovered }, country}) => {\r\n\tconst [dailyData, setDailyData] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchAPI = async () => {\r\n\t\t\tsetDailyData(await fetchDailyData());\r\n\t\t}\r\n\r\n\t\tfetchAPI();\r\n\t}, []);\r\n\r\n\tconst lineChart = (\r\n\t\tdailyData.length\r\n\t\t? (\r\n\t\t\t<Line\r\n\t\t\tdata={{\r\n\t\t\t\tlabels:dailyData.map(({ date }) => date),\r\n\t\t\t\tdatasets: [{\r\n\t\t\t\t\tdata: dailyData.map(({ confirmed }) => confirmed),\r\n\t\t\t\t\tlabel: 'Confirmed',\r\n\t\t\t\t\tborderColor: '#3333ff',\r\n\t\t\t\t\tfill: true\r\n\t\t\t\t}, {\r\n\t\t\t\t\tdata: dailyData.map(({ deaths }) => deaths),\r\n\t\t\t\t\tlabel: 'Deaths',\r\n\t\t\t\t\tborderColor: 'red',\r\n\t\t\t\t\tbackgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n\t\t\t\t\tfill: true,\r\n\t\t\t\t}]\r\n\t\t\t}}\r\n\t\t\t/>\r\n\t\t) : null\r\n\t);\r\n\r\n\tconsole.log(confirmed, recovered, deaths);\r\n\r\n\tconst barChart = (\r\n\t\tconfirmed\r\n\t\t\t? (\r\n\t\t\t\t<Bar\r\n\t\t\t\t\tdata={{\r\n\t\t\t\t\t\tlabels: ['Confirmed', 'Recovered', 'Deaths'],\r\n\t\t\t\t\t\tdatasets: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tlabel: 'People',\r\n\t\t\t\t\t\t\t\tbackgroundColor: ['rgba(0, 0, 255, 0.5)', \r\n\t\t\t\t\t\t\t\t\t'rgba(0, 255, 0, 0.5)',\r\n\t\t\t\t\t\t\t\t\t'rgba(255, 0, 0, 0.5)'],\r\n\t\t\t\t\t\t\t\tdata:[confirmed.value, recovered.value, deaths.value]\r\n\t\t\t\t\t\t\t}]\r\n\t\t\t\t\t}}\r\n\t\t\t\t\toptions={{\r\n\t\t\t\t\t\tlegend: { display: false },\r\n\t\t\t\t\t\ttitle: { display: true, text: `${country} Statistics:` },\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\t\t: null\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className = {styles.container}>\r\n\t\t\t{country ? barChart : lineChart}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { FormControl } from '@material-ui/core';\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n\tconst [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchAPI = async () => {\r\n\t\t\tsetFetchedCountries(await fetchCountries());\r\n\t\t}\r\n\r\n\t\tfetchAPI();\r\n\t}, [setFetchedCountries]);\r\n\r\n\tconsole.log(fetchedCountries);\r\n\r\n\t// List of countries\r\n\treturn (\r\n\t\t<FormControl className = {styles.formControl}>\r\n\t\t\t<Autocomplete\r\n\t\t\t\tonChange={(event, newValue) => {\r\n\t\t\t\t\thandleCountryChange(newValue);\r\n\t\t\t\t}}\r\n\t\t\t\toptions={fetchedCountries}\r\n\t\t\t\trenderInput={(params) => (\r\n\t\t\t\t\t<TextField {...params} label=\"Select a Country\" variant=\"outlined\" />\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t</FormControl>\r\n\t)\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport styles from './App.module.css'\r\nimport { fetchData } from './api';\r\nimport titleImage from './images/covidualizer.png';\r\nimport Emoji from 'react-emoji-render';\r\n\r\nclass App extends React.Component {\r\n\r\n\tstate = {\r\n\t\tdata: {}, // empty until populated\r\n\t\tcountry: '',\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst fetchedData = await fetchData();\r\n\t\t\r\n\t\tthis.setState({ data: fetchedData }); // populate data in state with fetchedData\r\n\t}\r\n\r\n\thandleCountryChange = async (country) => {\r\n\t\tconst fetchedData = await fetchData(country);\r\n\t\t\r\n\t\tthis.setState({ data: fetchedData, country: country});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { data, country } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div className={styles.container}>\r\n\t\t\t\t<img className={styles.image} src={titleImage} alt=\"COVIDUALIZER\"/>\r\n\t\t\t\t<Cards data={data} />\r\n\t\t\t\t<CountryPicker handleCountryChange={this.handleCountryChange} />\r\n\t\t\t\t<Chart data = { data } country = { country }  /> \r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tLearn how to <a href=\"https://www.cdc.gov/coronavirus/2019-ncov/prevent-getting-sick/prevention.html\" target=\"_blank\">stop the spread.</a> \r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div> \r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<a href=\"https://github.com/feliciawang08\" target=\"_blank\">GitHub</a> | <a href=\"https://www.linkedin.com/in/felicia-wang-08/\" target=\"_blank\"> LinkedIn</a>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.bottom}>\r\n\t\t\t\t\t<Emoji text=\"Made with :heart: by Felicia Wang | Est. Aug. 2020\" /> \r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t)}\r\n\t\t\r\n\t}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__uXFbj\",\"image\":\"App_image__YPejL\",\"bottom\":\"App_bottom__35_nI\"};"],"sourceRoot":""}